#pragma warning disable 1591
//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Runtime Version:4.0.30319.42000
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace scheduler
{
	using System.Data.Linq;
	using System.Data.Linq.Mapping;
	using System.Data;
	using System.Collections.Generic;
	using System.Reflection;
	using System.Linq;
	using System.Linq.Expressions;
	using System.ComponentModel;
	using System;
	
	
	[global::System.Data.Linq.Mapping.DatabaseAttribute(Name="dtas_s383964")]
	public partial class BazaDanychDataContext : System.Data.Linq.DataContext
	{
		
		private static System.Data.Linq.Mapping.MappingSource mappingSource = new AttributeMappingSource();
		
    #region Extensibility Method Definitions
    partial void OnCreated();
    partial void InsertGrupa(Grupa instance);
    partial void UpdateGrupa(Grupa instance);
    partial void DeleteGrupa(Grupa instance);
    partial void InsertStudent(Student instance);
    partial void UpdateStudent(Student instance);
    partial void DeleteStudent(Student instance);
    partial void InsertPozycja_planu(Pozycja_planu instance);
    partial void UpdatePozycja_planu(Pozycja_planu instance);
    partial void DeletePozycja_planu(Pozycja_planu instance);
    partial void InsertProwadzacy(Prowadzacy instance);
    partial void UpdateProwadzacy(Prowadzacy instance);
    partial void DeleteProwadzacy(Prowadzacy instance);
    partial void InsertPrzedmiot(Przedmiot instance);
    partial void UpdatePrzedmiot(Przedmiot instance);
    partial void DeletePrzedmiot(Przedmiot instance);
    partial void InsertPrzypisany_przedmiot(Przypisany_przedmiot instance);
    partial void UpdatePrzypisany_przedmiot(Przypisany_przedmiot instance);
    partial void DeletePrzypisany_przedmiot(Przypisany_przedmiot instance);
    partial void InsertSala(Sala instance);
    partial void UpdateSala(Sala instance);
    partial void DeleteSala(Sala instance);
    #endregion
		
		public BazaDanychDataContext() : 
				base(global::scheduler.Properties.Settings.Default.dtas_s383964ConnectionString, mappingSource)
		{
			OnCreated();
		}
		
		public BazaDanychDataContext(string connection) : 
				base(connection, mappingSource)
		{
			OnCreated();
		}
		
		public BazaDanychDataContext(System.Data.IDbConnection connection) : 
				base(connection, mappingSource)
		{
			OnCreated();
		}
		
		public BazaDanychDataContext(string connection, System.Data.Linq.Mapping.MappingSource mappingSource) : 
				base(connection, mappingSource)
		{
			OnCreated();
		}
		
		public BazaDanychDataContext(System.Data.IDbConnection connection, System.Data.Linq.Mapping.MappingSource mappingSource) : 
				base(connection, mappingSource)
		{
			OnCreated();
		}
		
		public System.Data.Linq.Table<Grupa> Grupas
		{
			get
			{
				return this.GetTable<Grupa>();
			}
		}
		
		public System.Data.Linq.Table<Student> Students
		{
			get
			{
				return this.GetTable<Student>();
			}
		}
		
		public System.Data.Linq.Table<Pozycja_planu> Pozycja_planus
		{
			get
			{
				return this.GetTable<Pozycja_planu>();
			}
		}
		
		public System.Data.Linq.Table<Prowadzacy> Prowadzacies
		{
			get
			{
				return this.GetTable<Prowadzacy>();
			}
		}
		
		public System.Data.Linq.Table<Przedmiot> Przedmiots
		{
			get
			{
				return this.GetTable<Przedmiot>();
			}
		}
		
		public System.Data.Linq.Table<Przypisany_przedmiot> Przypisany_przedmiots
		{
			get
			{
				return this.GetTable<Przypisany_przedmiot>();
			}
		}
		
		public System.Data.Linq.Table<Sala> Salas
		{
			get
			{
				return this.GetTable<Sala>();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.Grupa")]
	public partial class Grupa : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private System.Guid _id;
		
		private string _nazwa;
		
		private string _kierunek;
		
		private int _rok;
		
		private int _miejsca;
		
		private EntitySet<Student> _Students;
		
		private EntitySet<Pozycja_planu> _Pozycja_planus;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnidChanging(System.Guid value);
    partial void OnidChanged();
    partial void OnnazwaChanging(string value);
    partial void OnnazwaChanged();
    partial void OnkierunekChanging(string value);
    partial void OnkierunekChanged();
    partial void OnrokChanging(int value);
    partial void OnrokChanged();
    partial void OnmiejscaChanging(int value);
    partial void OnmiejscaChanged();
    #endregion
		
		public Grupa()
		{
			this._Students = new EntitySet<Student>(new Action<Student>(this.attach_Students), new Action<Student>(this.detach_Students));
			this._Pozycja_planus = new EntitySet<Pozycja_planu>(new Action<Pozycja_planu>(this.attach_Pozycja_planus), new Action<Pozycja_planu>(this.detach_Pozycja_planus));
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_id", DbType="UniqueIdentifier NOT NULL", IsPrimaryKey=true)]
		public System.Guid id
		{
			get
			{
				return this._id;
			}
			set
			{
				if ((this._id != value))
				{
					this.OnidChanging(value);
					this.SendPropertyChanging();
					this._id = value;
					this.SendPropertyChanged("id");
					this.OnidChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_nazwa", DbType="NVarChar(50) NOT NULL", CanBeNull=false)]
		public string nazwa
		{
			get
			{
				return this._nazwa;
			}
			set
			{
				if ((this._nazwa != value))
				{
					this.OnnazwaChanging(value);
					this.SendPropertyChanging();
					this._nazwa = value;
					this.SendPropertyChanged("nazwa");
					this.OnnazwaChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_kierunek", DbType="NVarChar(50) NOT NULL", CanBeNull=false)]
		public string kierunek
		{
			get
			{
				return this._kierunek;
			}
			set
			{
				if ((this._kierunek != value))
				{
					this.OnkierunekChanging(value);
					this.SendPropertyChanging();
					this._kierunek = value;
					this.SendPropertyChanged("kierunek");
					this.OnkierunekChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_rok", DbType="Int NOT NULL")]
		public int rok
		{
			get
			{
				return this._rok;
			}
			set
			{
				if ((this._rok != value))
				{
					this.OnrokChanging(value);
					this.SendPropertyChanging();
					this._rok = value;
					this.SendPropertyChanged("rok");
					this.OnrokChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_miejsca", DbType="Int NOT NULL")]
		public int miejsca
		{
			get
			{
				return this._miejsca;
			}
			set
			{
				if ((this._miejsca != value))
				{
					this.OnmiejscaChanging(value);
					this.SendPropertyChanging();
					this._miejsca = value;
					this.SendPropertyChanged("miejsca");
					this.OnmiejscaChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Grupa_Student", Storage="_Students", ThisKey="id", OtherKey="id_grupy")]
		public EntitySet<Student> Students
		{
			get
			{
				return this._Students;
			}
			set
			{
				this._Students.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Grupa_Pozycja_planu", Storage="_Pozycja_planus", ThisKey="id", OtherKey="id_grupy")]
		public EntitySet<Pozycja_planu> Pozycja_planus
		{
			get
			{
				return this._Pozycja_planus;
			}
			set
			{
				this._Pozycja_planus.Assign(value);
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_Students(Student entity)
		{
			this.SendPropertyChanging();
			entity.Grupa = this;
		}
		
		private void detach_Students(Student entity)
		{
			this.SendPropertyChanging();
			entity.Grupa = null;
		}
		
		private void attach_Pozycja_planus(Pozycja_planu entity)
		{
			this.SendPropertyChanging();
			entity.Grupa = this;
		}
		
		private void detach_Pozycja_planus(Pozycja_planu entity)
		{
			this.SendPropertyChanging();
			entity.Grupa = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.Student")]
	public partial class Student : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private System.Guid _id;
		
		private string _nazwa;
		
		private string _indeks;
		
		private System.Nullable<System.Guid> _id_grupy;
		
		private int _rok;
		
		private EntityRef<Grupa> _Grupa;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnidChanging(System.Guid value);
    partial void OnidChanged();
    partial void OnnazwaChanging(string value);
    partial void OnnazwaChanged();
    partial void OnindeksChanging(string value);
    partial void OnindeksChanged();
    partial void Onid_grupyChanging(System.Nullable<System.Guid> value);
    partial void Onid_grupyChanged();
    partial void OnrokChanging(int value);
    partial void OnrokChanged();
    #endregion
		
		public Student()
		{
			this._Grupa = default(EntityRef<Grupa>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_id", DbType="UniqueIdentifier NOT NULL", IsPrimaryKey=true)]
		public System.Guid id
		{
			get
			{
				return this._id;
			}
			set
			{
				if ((this._id != value))
				{
					this.OnidChanging(value);
					this.SendPropertyChanging();
					this._id = value;
					this.SendPropertyChanged("id");
					this.OnidChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_nazwa", DbType="NVarChar(50) NOT NULL", CanBeNull=false)]
		public string nazwa
		{
			get
			{
				return this._nazwa;
			}
			set
			{
				if ((this._nazwa != value))
				{
					this.OnnazwaChanging(value);
					this.SendPropertyChanging();
					this._nazwa = value;
					this.SendPropertyChanged("nazwa");
					this.OnnazwaChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_indeks", DbType="NVarChar(50) NOT NULL", CanBeNull=false)]
		public string indeks
		{
			get
			{
				return this._indeks;
			}
			set
			{
				if ((this._indeks != value))
				{
					this.OnindeksChanging(value);
					this.SendPropertyChanging();
					this._indeks = value;
					this.SendPropertyChanged("indeks");
					this.OnindeksChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_id_grupy", DbType="UniqueIdentifier")]
		public System.Nullable<System.Guid> id_grupy
		{
			get
			{
				return this._id_grupy;
			}
			set
			{
				if ((this._id_grupy != value))
				{
					if (this._Grupa.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.Onid_grupyChanging(value);
					this.SendPropertyChanging();
					this._id_grupy = value;
					this.SendPropertyChanged("id_grupy");
					this.Onid_grupyChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_rok", DbType="Int NOT NULL")]
		public int rok
		{
			get
			{
				return this._rok;
			}
			set
			{
				if ((this._rok != value))
				{
					this.OnrokChanging(value);
					this.SendPropertyChanging();
					this._rok = value;
					this.SendPropertyChanged("rok");
					this.OnrokChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Grupa_Student", Storage="_Grupa", ThisKey="id_grupy", OtherKey="id", IsForeignKey=true)]
		public Grupa Grupa
		{
			get
			{
				return this._Grupa.Entity;
			}
			set
			{
				Grupa previousValue = this._Grupa.Entity;
				if (((previousValue != value) 
							|| (this._Grupa.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._Grupa.Entity = null;
						previousValue.Students.Remove(this);
					}
					this._Grupa.Entity = value;
					if ((value != null))
					{
						value.Students.Add(this);
						this._id_grupy = value.id;
					}
					else
					{
						this._id_grupy = default(Nullable<System.Guid>);
					}
					this.SendPropertyChanged("Grupa");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.Pozycja_planu")]
	public partial class Pozycja_planu : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private System.Guid _id;
		
		private System.Nullable<System.Guid> _id_prowadźacego;
		
		private System.Guid _id_grupy;
		
		private System.Nullable<System.Guid> _id_przedmiotu;
		
		private System.Nullable<System.Guid> _id_sali;
		
		private string _dzień;
		
		private System.TimeSpan _godzina_od;
		
		private System.TimeSpan _godzina_do;
		
		private EntityRef<Grupa> _Grupa;
		
		private EntityRef<Prowadzacy> _Prowadzacy;
		
		private EntityRef<Przedmiot> _Przedmiot;
		
		private EntityRef<Sala> _Sala;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnidChanging(System.Guid value);
    partial void OnidChanged();
    partial void Onid_prowadzacegoChanging(System.Nullable<System.Guid> value);
    partial void Onid_prowadzacegoChanged();
    partial void Onid_grupyChanging(System.Guid value);
    partial void Onid_grupyChanged();
    partial void Onid_przedmiotuChanging(System.Nullable<System.Guid> value);
    partial void Onid_przedmiotuChanged();
    partial void Onid_saliChanging(System.Nullable<System.Guid> value);
    partial void Onid_saliChanged();
    partial void OndzienChanging(string value);
    partial void OndzienChanged();
    partial void Ongodzina_odChanging(System.TimeSpan value);
    partial void Ongodzina_odChanged();
    partial void Ongodzina_doChanging(System.TimeSpan value);
    partial void Ongodzina_doChanged();
    #endregion
		
		public Pozycja_planu()
		{
			this._Grupa = default(EntityRef<Grupa>);
			this._Prowadzacy = default(EntityRef<Prowadzacy>);
			this._Przedmiot = default(EntityRef<Przedmiot>);
			this._Sala = default(EntityRef<Sala>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_id", DbType="UniqueIdentifier NOT NULL", IsPrimaryKey=true)]
		public System.Guid id
		{
			get
			{
				return this._id;
			}
			set
			{
				if ((this._id != value))
				{
					this.OnidChanging(value);
					this.SendPropertyChanging();
					this._id = value;
					this.SendPropertyChanged("id");
					this.OnidChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Name="id_prowadźacego", Storage="_id_prowadźacego", DbType="UniqueIdentifier")]
		public System.Nullable<System.Guid> id_prowadzacego
		{
			get
			{
				return this._id_prowadźacego;
			}
			set
			{
				if ((this._id_prowadźacego != value))
				{
					this.Onid_prowadzacegoChanging(value);
					this.SendPropertyChanging();
					this._id_prowadźacego = value;
					this.SendPropertyChanged("id_prowadzacego");
					this.Onid_prowadzacegoChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_id_grupy", DbType="UniqueIdentifier NOT NULL")]
		public System.Guid id_grupy
		{
			get
			{
				return this._id_grupy;
			}
			set
			{
				if ((this._id_grupy != value))
				{
					if (this._Grupa.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.Onid_grupyChanging(value);
					this.SendPropertyChanging();
					this._id_grupy = value;
					this.SendPropertyChanged("id_grupy");
					this.Onid_grupyChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_id_przedmiotu", DbType="UniqueIdentifier")]
		public System.Nullable<System.Guid> id_przedmiotu
		{
			get
			{
				return this._id_przedmiotu;
			}
			set
			{
				if ((this._id_przedmiotu != value))
				{
					if (this._Przedmiot.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.Onid_przedmiotuChanging(value);
					this.SendPropertyChanging();
					this._id_przedmiotu = value;
					this.SendPropertyChanged("id_przedmiotu");
					this.Onid_przedmiotuChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_id_sali", DbType="UniqueIdentifier")]
		public System.Nullable<System.Guid> id_sali
		{
			get
			{
				return this._id_sali;
			}
			set
			{
				if ((this._id_sali != value))
				{
					if (this._Sala.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.Onid_saliChanging(value);
					this.SendPropertyChanging();
					this._id_sali = value;
					this.SendPropertyChanged("id_sali");
					this.Onid_saliChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Name="dzień", Storage="_dzień", DbType="NVarChar(50) NOT NULL", CanBeNull=false)]
		public string dzien
		{
			get
			{
				return this._dzień;
			}
			set
			{
				if ((this._dzień != value))
				{
					this.OndzienChanging(value);
					this.SendPropertyChanging();
					this._dzień = value;
					this.SendPropertyChanged("dzien");
					this.OndzienChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_godzina_od", DbType="Time NOT NULL")]
		public System.TimeSpan godzina_od
		{
			get
			{
				return this._godzina_od;
			}
			set
			{
				if ((this._godzina_od != value))
				{
					this.Ongodzina_odChanging(value);
					this.SendPropertyChanging();
					this._godzina_od = value;
					this.SendPropertyChanged("godzina_od");
					this.Ongodzina_odChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_godzina_do", DbType="Time NOT NULL")]
		public System.TimeSpan godzina_do
		{
			get
			{
				return this._godzina_do;
			}
			set
			{
				if ((this._godzina_do != value))
				{
					this.Ongodzina_doChanging(value);
					this.SendPropertyChanging();
					this._godzina_do = value;
					this.SendPropertyChanged("godzina_do");
					this.Ongodzina_doChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Grupa_Pozycja_planu", Storage="_Grupa", ThisKey="id_grupy", OtherKey="id", IsForeignKey=true)]
		public Grupa Grupa
		{
			get
			{
				return this._Grupa.Entity;
			}
			set
			{
				Grupa previousValue = this._Grupa.Entity;
				if (((previousValue != value) 
							|| (this._Grupa.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._Grupa.Entity = null;
						previousValue.Pozycja_planus.Remove(this);
					}
					this._Grupa.Entity = value;
					if ((value != null))
					{
						value.Pozycja_planus.Add(this);
						this._id_grupy = value.id;
					}
					else
					{
						this._id_grupy = default(System.Guid);
					}
					this.SendPropertyChanged("Grupa");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Prowadzacy_Pozycja_planu", Storage="_Prowadzacy", ThisKey="id_prowadzacego", OtherKey="id", IsForeignKey=true)]
		public Prowadzacy Prowadzacy
		{
			get
			{
				return this._Prowadzacy.Entity;
			}
			set
			{
				Prowadzacy previousValue = this._Prowadzacy.Entity;
				if (((previousValue != value) 
							|| (this._Prowadzacy.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._Prowadzacy.Entity = null;
						previousValue.Pozycja_planus.Remove(this);
					}
					this._Prowadzacy.Entity = value;
					if ((value != null))
					{
						value.Pozycja_planus.Add(this);
						this._id_prowadźacego = value.id;
					}
					else
					{
						this._id_prowadźacego = default(Nullable<System.Guid>);
					}
					this.SendPropertyChanged("Prowadzacy");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Przedmiot_Pozycja_planu", Storage="_Przedmiot", ThisKey="id_przedmiotu", OtherKey="id", IsForeignKey=true)]
		public Przedmiot Przedmiot
		{
			get
			{
				return this._Przedmiot.Entity;
			}
			set
			{
				Przedmiot previousValue = this._Przedmiot.Entity;
				if (((previousValue != value) 
							|| (this._Przedmiot.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._Przedmiot.Entity = null;
						previousValue.Pozycja_planus.Remove(this);
					}
					this._Przedmiot.Entity = value;
					if ((value != null))
					{
						value.Pozycja_planus.Add(this);
						this._id_przedmiotu = value.id;
					}
					else
					{
						this._id_przedmiotu = default(Nullable<System.Guid>);
					}
					this.SendPropertyChanged("Przedmiot");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Sala_Pozycja_planu", Storage="_Sala", ThisKey="id_sali", OtherKey="id", IsForeignKey=true)]
		public Sala Sala
		{
			get
			{
				return this._Sala.Entity;
			}
			set
			{
				Sala previousValue = this._Sala.Entity;
				if (((previousValue != value) 
							|| (this._Sala.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._Sala.Entity = null;
						previousValue.Pozycja_planus.Remove(this);
					}
					this._Sala.Entity = value;
					if ((value != null))
					{
						value.Pozycja_planus.Add(this);
						this._id_sali = value.id;
					}
					else
					{
						this._id_sali = default(Nullable<System.Guid>);
					}
					this.SendPropertyChanged("Sala");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.Prowadzący")]
	public partial class Prowadzacy : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private System.Guid _id;
		
		private string _nazwa;
		
		private string _tytuł;
		
		private EntitySet<Pozycja_planu> _Pozycja_planus;
		
		private EntitySet<Przypisany_przedmiot> _Przypisany_przedmiots;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnidChanging(System.Guid value);
    partial void OnidChanged();
    partial void OnnazwaChanging(string value);
    partial void OnnazwaChanged();
    partial void OntytulChanging(string value);
    partial void OntytulChanged();
    #endregion
		
		public Prowadzacy()
		{
			this._Pozycja_planus = new EntitySet<Pozycja_planu>(new Action<Pozycja_planu>(this.attach_Pozycja_planus), new Action<Pozycja_planu>(this.detach_Pozycja_planus));
			this._Przypisany_przedmiots = new EntitySet<Przypisany_przedmiot>(new Action<Przypisany_przedmiot>(this.attach_Przypisany_przedmiots), new Action<Przypisany_przedmiot>(this.detach_Przypisany_przedmiots));
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_id", DbType="UniqueIdentifier NOT NULL", IsPrimaryKey=true)]
		public System.Guid id
		{
			get
			{
				return this._id;
			}
			set
			{
				if ((this._id != value))
				{
					this.OnidChanging(value);
					this.SendPropertyChanging();
					this._id = value;
					this.SendPropertyChanged("id");
					this.OnidChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_nazwa", DbType="NVarChar(50) NOT NULL", CanBeNull=false)]
		public string nazwa
		{
			get
			{
				return this._nazwa;
			}
			set
			{
				if ((this._nazwa != value))
				{
					this.OnnazwaChanging(value);
					this.SendPropertyChanging();
					this._nazwa = value;
					this.SendPropertyChanged("nazwa");
					this.OnnazwaChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Name="tytuł", Storage="_tytuł", DbType="NVarChar(50)")]
		public string tytul
		{
			get
			{
				return this._tytuł;
			}
			set
			{
				if ((this._tytuł != value))
				{
					this.OntytulChanging(value);
					this.SendPropertyChanging();
					this._tytuł = value;
					this.SendPropertyChanged("tytul");
					this.OntytulChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Prowadzacy_Pozycja_planu", Storage="_Pozycja_planus", ThisKey="id", OtherKey="id_prowadzacego")]
		public EntitySet<Pozycja_planu> Pozycja_planus
		{
			get
			{
				return this._Pozycja_planus;
			}
			set
			{
				this._Pozycja_planus.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Prowadzacy_Przypisany_przedmiot", Storage="_Przypisany_przedmiots", ThisKey="id", OtherKey="id_prowadzacego")]
		public EntitySet<Przypisany_przedmiot> Przypisany_przedmiots
		{
			get
			{
				return this._Przypisany_przedmiots;
			}
			set
			{
				this._Przypisany_przedmiots.Assign(value);
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_Pozycja_planus(Pozycja_planu entity)
		{
			this.SendPropertyChanging();
			entity.Prowadzacy = this;
		}
		
		private void detach_Pozycja_planus(Pozycja_planu entity)
		{
			this.SendPropertyChanging();
			entity.Prowadzacy = null;
		}
		
		private void attach_Przypisany_przedmiots(Przypisany_przedmiot entity)
		{
			this.SendPropertyChanging();
			entity.Prowadzacy = this;
		}
		
		private void detach_Przypisany_przedmiots(Przypisany_przedmiot entity)
		{
			this.SendPropertyChanging();
			entity.Prowadzacy = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.Przedmiot")]
	public partial class Przedmiot : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private System.Guid _id;
		
		private string _nazwa;
		
		private int _rok;
		
		private string _semestr;
		
		private string _kierunek;
		
		private int _wykład;
		
		private int _ćwiczenia;
		
		private int _laboratoria;
		
		private EntitySet<Pozycja_planu> _Pozycja_planus;
		
		private EntitySet<Przypisany_przedmiot> _Przypisany_przedmiots;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnidChanging(System.Guid value);
    partial void OnidChanged();
    partial void OnnazwaChanging(string value);
    partial void OnnazwaChanged();
    partial void OnrokChanging(int value);
    partial void OnrokChanged();
    partial void OnsemestrChanging(string value);
    partial void OnsemestrChanged();
    partial void OnkierunekChanging(string value);
    partial void OnkierunekChanged();
    partial void OnwykładChanging(int value);
    partial void OnwykładChanged();
    partial void OncwiczeniaChanging(int value);
    partial void OncwiczeniaChanged();
    partial void OnlaboratoriaChanging(int value);
    partial void OnlaboratoriaChanged();
    #endregion
		
		public Przedmiot()
		{
			this._Pozycja_planus = new EntitySet<Pozycja_planu>(new Action<Pozycja_planu>(this.attach_Pozycja_planus), new Action<Pozycja_planu>(this.detach_Pozycja_planus));
			this._Przypisany_przedmiots = new EntitySet<Przypisany_przedmiot>(new Action<Przypisany_przedmiot>(this.attach_Przypisany_przedmiots), new Action<Przypisany_przedmiot>(this.detach_Przypisany_przedmiots));
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_id", DbType="UniqueIdentifier NOT NULL", IsPrimaryKey=true)]
		public System.Guid id
		{
			get
			{
				return this._id;
			}
			set
			{
				if ((this._id != value))
				{
					this.OnidChanging(value);
					this.SendPropertyChanging();
					this._id = value;
					this.SendPropertyChanged("id");
					this.OnidChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_nazwa", DbType="NVarChar(100) NOT NULL", CanBeNull=false)]
		public string nazwa
		{
			get
			{
				return this._nazwa;
			}
			set
			{
				if ((this._nazwa != value))
				{
					this.OnnazwaChanging(value);
					this.SendPropertyChanging();
					this._nazwa = value;
					this.SendPropertyChanged("nazwa");
					this.OnnazwaChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_rok", DbType="Int NOT NULL")]
		public int rok
		{
			get
			{
				return this._rok;
			}
			set
			{
				if ((this._rok != value))
				{
					this.OnrokChanging(value);
					this.SendPropertyChanging();
					this._rok = value;
					this.SendPropertyChanged("rok");
					this.OnrokChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_semestr", DbType="NVarChar(50) NOT NULL", CanBeNull=false)]
		public string semestr
		{
			get
			{
				return this._semestr;
			}
			set
			{
				if ((this._semestr != value))
				{
					this.OnsemestrChanging(value);
					this.SendPropertyChanging();
					this._semestr = value;
					this.SendPropertyChanged("semestr");
					this.OnsemestrChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_kierunek", DbType="NVarChar(50) NOT NULL", CanBeNull=false)]
		public string kierunek
		{
			get
			{
				return this._kierunek;
			}
			set
			{
				if ((this._kierunek != value))
				{
					this.OnkierunekChanging(value);
					this.SendPropertyChanging();
					this._kierunek = value;
					this.SendPropertyChanged("kierunek");
					this.OnkierunekChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_wykład", DbType="Int NOT NULL")]
		public int wykład
		{
			get
			{
				return this._wykład;
			}
			set
			{
				if ((this._wykład != value))
				{
					this.OnwykładChanging(value);
					this.SendPropertyChanging();
					this._wykład = value;
					this.SendPropertyChanged("wykład");
					this.OnwykładChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Name="ćwiczenia", Storage="_ćwiczenia", DbType="Int NOT NULL")]
		public int cwiczenia
		{
			get
			{
				return this._ćwiczenia;
			}
			set
			{
				if ((this._ćwiczenia != value))
				{
					this.OncwiczeniaChanging(value);
					this.SendPropertyChanging();
					this._ćwiczenia = value;
					this.SendPropertyChanged("cwiczenia");
					this.OncwiczeniaChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_laboratoria", DbType="Int NOT NULL")]
		public int laboratoria
		{
			get
			{
				return this._laboratoria;
			}
			set
			{
				if ((this._laboratoria != value))
				{
					this.OnlaboratoriaChanging(value);
					this.SendPropertyChanging();
					this._laboratoria = value;
					this.SendPropertyChanged("laboratoria");
					this.OnlaboratoriaChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Przedmiot_Pozycja_planu", Storage="_Pozycja_planus", ThisKey="id", OtherKey="id_przedmiotu")]
		public EntitySet<Pozycja_planu> Pozycja_planus
		{
			get
			{
				return this._Pozycja_planus;
			}
			set
			{
				this._Pozycja_planus.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Przedmiot_Przypisany_przedmiot", Storage="_Przypisany_przedmiots", ThisKey="id", OtherKey="id_przedmiotu")]
		public EntitySet<Przypisany_przedmiot> Przypisany_przedmiots
		{
			get
			{
				return this._Przypisany_przedmiots;
			}
			set
			{
				this._Przypisany_przedmiots.Assign(value);
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_Pozycja_planus(Pozycja_planu entity)
		{
			this.SendPropertyChanging();
			entity.Przedmiot = this;
		}
		
		private void detach_Pozycja_planus(Pozycja_planu entity)
		{
			this.SendPropertyChanging();
			entity.Przedmiot = null;
		}
		
		private void attach_Przypisany_przedmiots(Przypisany_przedmiot entity)
		{
			this.SendPropertyChanging();
			entity.Przedmiot = this;
		}
		
		private void detach_Przypisany_przedmiots(Przypisany_przedmiot entity)
		{
			this.SendPropertyChanging();
			entity.Przedmiot = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.Przypisany_przedmiot")]
	public partial class Przypisany_przedmiot : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private System.Guid _id;
		
		private System.Guid _id_prowadźacego;
		
		private System.Guid _id_przedmiotu;
		
		private string _rodzaj_zajęć;
		
		private int _ilość_zajęć;
		
		private EntityRef<Prowadzacy> _Prowadzacy;
		
		private EntityRef<Przedmiot> _Przedmiot;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnidChanging(System.Guid value);
    partial void OnidChanged();
    partial void Onid_prowadzacegoChanging(System.Guid value);
    partial void Onid_prowadzacegoChanged();
    partial void Onid_przedmiotuChanging(System.Guid value);
    partial void Onid_przedmiotuChanged();
    partial void Onrodzaj_zajecChanging(string value);
    partial void Onrodzaj_zajecChanged();
    partial void Onilosc_zajecChanging(int value);
    partial void Onilosc_zajecChanged();
    #endregion
		
		public Przypisany_przedmiot()
		{
			this._Prowadzacy = default(EntityRef<Prowadzacy>);
			this._Przedmiot = default(EntityRef<Przedmiot>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_id", DbType="UniqueIdentifier NOT NULL", IsPrimaryKey=true)]
		public System.Guid id
		{
			get
			{
				return this._id;
			}
			set
			{
				if ((this._id != value))
				{
					this.OnidChanging(value);
					this.SendPropertyChanging();
					this._id = value;
					this.SendPropertyChanged("id");
					this.OnidChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Name="id_prowadźacego", Storage="_id_prowadźacego", DbType="UniqueIdentifier NOT NULL")]
		public System.Guid id_prowadzacego
		{
			get
			{
				return this._id_prowadźacego;
			}
			set
			{
				if ((this._id_prowadźacego != value))
				{
					this.Onid_prowadzacegoChanging(value);
					this.SendPropertyChanging();
					this._id_prowadźacego = value;
					this.SendPropertyChanged("id_prowadzacego");
					this.Onid_prowadzacegoChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_id_przedmiotu", DbType="UniqueIdentifier NOT NULL")]
		public System.Guid id_przedmiotu
		{
			get
			{
				return this._id_przedmiotu;
			}
			set
			{
				if ((this._id_przedmiotu != value))
				{
					if (this._Przedmiot.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.Onid_przedmiotuChanging(value);
					this.SendPropertyChanging();
					this._id_przedmiotu = value;
					this.SendPropertyChanged("id_przedmiotu");
					this.Onid_przedmiotuChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Name="rodzaj_zajęć", Storage="_rodzaj_zajęć", DbType="NVarChar(20) NOT NULL", CanBeNull=false)]
		public string rodzaj_zajec
		{
			get
			{
				return this._rodzaj_zajęć;
			}
			set
			{
				if ((this._rodzaj_zajęć != value))
				{
					this.Onrodzaj_zajecChanging(value);
					this.SendPropertyChanging();
					this._rodzaj_zajęć = value;
					this.SendPropertyChanged("rodzaj_zajec");
					this.Onrodzaj_zajecChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Name="ilość_zajęć", Storage="_ilość_zajęć", DbType="Int NOT NULL")]
		public int ilosc_zajec
		{
			get
			{
				return this._ilość_zajęć;
			}
			set
			{
				if ((this._ilość_zajęć != value))
				{
					this.Onilosc_zajecChanging(value);
					this.SendPropertyChanging();
					this._ilość_zajęć = value;
					this.SendPropertyChanged("ilosc_zajec");
					this.Onilosc_zajecChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Prowadzacy_Przypisany_przedmiot", Storage="_Prowadzacy", ThisKey="id_prowadzacego", OtherKey="id", IsForeignKey=true)]
		public Prowadzacy Prowadzacy
		{
			get
			{
				return this._Prowadzacy.Entity;
			}
			set
			{
				Prowadzacy previousValue = this._Prowadzacy.Entity;
				if (((previousValue != value) 
							|| (this._Prowadzacy.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._Prowadzacy.Entity = null;
						previousValue.Przypisany_przedmiots.Remove(this);
					}
					this._Prowadzacy.Entity = value;
					if ((value != null))
					{
						value.Przypisany_przedmiots.Add(this);
						this._id_prowadźacego = value.id;
					}
					else
					{
						this._id_prowadźacego = default(System.Guid);
					}
					this.SendPropertyChanged("Prowadzacy");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Przedmiot_Przypisany_przedmiot", Storage="_Przedmiot", ThisKey="id_przedmiotu", OtherKey="id", IsForeignKey=true)]
		public Przedmiot Przedmiot
		{
			get
			{
				return this._Przedmiot.Entity;
			}
			set
			{
				Przedmiot previousValue = this._Przedmiot.Entity;
				if (((previousValue != value) 
							|| (this._Przedmiot.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._Przedmiot.Entity = null;
						previousValue.Przypisany_przedmiots.Remove(this);
					}
					this._Przedmiot.Entity = value;
					if ((value != null))
					{
						value.Przypisany_przedmiots.Add(this);
						this._id_przedmiotu = value.id;
					}
					else
					{
						this._id_przedmiotu = default(System.Guid);
					}
					this.SendPropertyChanged("Przedmiot");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.Sala")]
	public partial class Sala : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private System.Guid _id;
		
		private string _nazwa;
		
		private string _typ;
		
		private int _miejsca;
		
		private EntitySet<Pozycja_planu> _Pozycja_planus;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnidChanging(System.Guid value);
    partial void OnidChanged();
    partial void OnnazwaChanging(string value);
    partial void OnnazwaChanged();
    partial void OntypChanging(string value);
    partial void OntypChanged();
    partial void OnmiejscaChanging(int value);
    partial void OnmiejscaChanged();
    #endregion
		
		public Sala()
		{
			this._Pozycja_planus = new EntitySet<Pozycja_planu>(new Action<Pozycja_planu>(this.attach_Pozycja_planus), new Action<Pozycja_planu>(this.detach_Pozycja_planus));
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_id", DbType="UniqueIdentifier NOT NULL", IsPrimaryKey=true)]
		public System.Guid id
		{
			get
			{
				return this._id;
			}
			set
			{
				if ((this._id != value))
				{
					this.OnidChanging(value);
					this.SendPropertyChanging();
					this._id = value;
					this.SendPropertyChanged("id");
					this.OnidChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_nazwa", DbType="NVarChar(50) NOT NULL", CanBeNull=false)]
		public string nazwa
		{
			get
			{
				return this._nazwa;
			}
			set
			{
				if ((this._nazwa != value))
				{
					this.OnnazwaChanging(value);
					this.SendPropertyChanging();
					this._nazwa = value;
					this.SendPropertyChanged("nazwa");
					this.OnnazwaChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_typ", DbType="NVarChar(50) NOT NULL", CanBeNull=false)]
		public string typ
		{
			get
			{
				return this._typ;
			}
			set
			{
				if ((this._typ != value))
				{
					this.OntypChanging(value);
					this.SendPropertyChanging();
					this._typ = value;
					this.SendPropertyChanged("typ");
					this.OntypChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_miejsca", DbType="Int NOT NULL")]
		public int miejsca
		{
			get
			{
				return this._miejsca;
			}
			set
			{
				if ((this._miejsca != value))
				{
					this.OnmiejscaChanging(value);
					this.SendPropertyChanging();
					this._miejsca = value;
					this.SendPropertyChanged("miejsca");
					this.OnmiejscaChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Sala_Pozycja_planu", Storage="_Pozycja_planus", ThisKey="id", OtherKey="id_sali")]
		public EntitySet<Pozycja_planu> Pozycja_planus
		{
			get
			{
				return this._Pozycja_planus;
			}
			set
			{
				this._Pozycja_planus.Assign(value);
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_Pozycja_planus(Pozycja_planu entity)
		{
			this.SendPropertyChanging();
			entity.Sala = this;
		}
		
		private void detach_Pozycja_planus(Pozycja_planu entity)
		{
			this.SendPropertyChanging();
			entity.Sala = null;
		}
	}
}
#pragma warning restore 1591
